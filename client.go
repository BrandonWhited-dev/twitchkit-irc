package twitchkitirc

// twitchIRC is meant to make it simple to conntect to twitch's IRC and read chat messages

import (
	"bufio"
	"errors"
	"fmt"
	"log"
	"net"
	"strings"
)

// ChatMessage is a struct of useful message information
//
//	Username: string - The chatters username
//	Message: string - The message sent
type ChatMessage struct {
	Username string
	Message  string
}

// Start will begin the IRC connection with twitch
// Parameters:
//
//	msgChan: is that channel that you will read the ChatMessage object from
//	oauthToken: is the token generated by twitch - Must have chat:read perm
//	username: your bots username
//	channel: the channel name that you want to read from
func Start(msgChan chan<- ChatMessage, oauthToken, username, channel string) error {
	conn, err := net.Dial("TCP", "irc.chat.twitch.tv:6667")
	if err != nil {
		return err
	}
	defer conn.Close()

	// Send authentication and join channel
	fmt.Fprintf(conn, "PASS oauth:%s\r\n", oauthToken)
	fmt.Fprintf(conn, "NICK %s\r\n", username)
	fmt.Fprintf(conn, "JOIN #%s\r\n", channel)

	reader := bufio.NewReader(conn)

	for {
		line, err := reader.ReadString('\n')
		if err != nil {
			log.Println("IRC read error: ", err)
			break
		}

		rawMessage := string(line)

		// handle a chatters message
		if strings.Contains(rawMessage, "PRIVMSG") {
			// Parse the irc message
			ircUseranme := strings.Split(rawMessage, "!")[0]
			username := cleanString(strings.TrimPrefix(ircUseranme, ":"))
			ircMessage := strings.SplitN(rawMessage, ":", 3)
			message := cleanString(ircMessage[2])

			// send ChatMessage object to channel
			msgChan <- ChatMessage{
				username,
				message,
			}
			continue
		}

		// NOTICE login failure
		if strings.Contains(rawMessage, "NOTICE") {
			ircMessage := strings.Split(rawMessage, ":")
			if len(ircMessage) >= 3 && cleanString(ircMessage[2]) == "login authentication failed" {
				return errors.New("Login authentication error")
			}
			continue
		}

		// Sucessful Login
		if strings.Contains(rawMessage, ":tmi.twitch.tv 001") {
			msgChan <- ChatMessage{
				"twitch",
				"IRC Connected...",
			}
			continue
		}

	}
}
